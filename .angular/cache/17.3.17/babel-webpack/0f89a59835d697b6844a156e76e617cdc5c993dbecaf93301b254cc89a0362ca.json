{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/expense.service\";\nimport * as i2 from \"ng2-charts\";\nimport * as i3 from \"@angular/common\";\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(svc) {\n      this.svc = svc;\n      this.total = 0;\n      this.chartData = {\n        labels: [],\n        datasets: []\n      };\n      this.chartOptions = {\n        responsive: true,\n        plugins: {\n          legend: {\n            display: true\n          }\n        }\n      };\n    }\n    ngOnInit() {\n      this.load();\n    }\n    load() {\n      const byCat = this.svc.getTotalByCategory();\n      this.chartData = {\n        labels: Object.keys(byCat),\n        datasets: [{\n          data: Object.values(byCat),\n          label: 'Amount'\n        }]\n      };\n      this.total = this.svc.getTotalExpenses();\n    }\n    static {\n      this.ɵfac = function DashboardComponent_Factory(t) {\n        return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.ExpenseService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: DashboardComponent,\n        selectors: [[\"app-dashboard\"]],\n        decls: 10,\n        vars: 5,\n        consts: [[1, \"card\"], [2, \"max-width\", \"600px\"], [\"baseChart\", \"\", \"type\", \"bar\", 3, \"data\", \"options\"]],\n        template: function DashboardComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n            i0.ɵɵtext(2, \"Dashboard\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"p\");\n            i0.ɵɵtext(4, \"Total expenses: \");\n            i0.ɵɵelementStart(5, \"strong\");\n            i0.ɵɵtext(6);\n            i0.ɵɵpipe(7, \"currency\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(8, \"div\", 1);\n            i0.ɵɵelement(9, \"canvas\", 2);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(6);\n            i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 3, ctx.total));\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"data\", ctx.chartData)(\"options\", ctx.chartOptions);\n          }\n        },\n        dependencies: [i2.BaseChartDirective, i3.CurrencyPipe],\n        encapsulation: 2\n      });\n    }\n  }\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}