{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst STORAGE_KEY = 'expense-tracker-data';\nexport let ExpenseService = /*#__PURE__*/(() => {\n  class ExpenseService {\n    constructor() {\n      this.expenses = [];\n      this.load();\n    }\n    save() {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(this.expenses));\n    }\n    load() {\n      const raw = localStorage.getItem(STORAGE_KEY);\n      this.expenses = raw ? JSON.parse(raw) : [{\n        date: new Date().toISOString().slice(0, 10),\n        category: 'Food',\n        note: 'Lunch',\n        amount: 120\n      }, {\n        date: new Date().toISOString().slice(0, 10),\n        category: 'Transport',\n        note: 'Taxi',\n        amount: 60\n      }];\n      this.save();\n    }\n    getExpenses() {\n      return [...this.expenses].sort((a, b) => b.date.localeCompare(a.date));\n    }\n    addExpense(e) {\n      this.expenses.push(e);\n      this.save();\n    }\n    removeExpense(index) {\n      this.expenses.splice(index, 1);\n      this.save();\n    }\n    getTotalExpenses() {\n      return this.expenses.reduce((s, t) => s + (+t.amount || 0), 0);\n    }\n    getTotalByCategory() {\n      const map = {};\n      for (const e of this.expenses) {\n        map[e.category] = (map[e.category] || 0) + (+e.amount || 0);\n      }\n      return map;\n    }\n    static {\n      this.ɵfac = function ExpenseService_Factory(t) {\n        return new (t || ExpenseService)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ExpenseService,\n        factory: ExpenseService.ɵfac\n      });\n    }\n  }\n  return ExpenseService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}